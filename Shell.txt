//当输入ifconfig时出现不能找到的时候  输入/sbin/ifconfig即可

shell编程：

1、编译器
	静态语言：c c++ java c#

2、解释器（可以自己解释变量） 
	动态语言：php python per1

3、脚本编程

4、面向过程：shell  c

5、面向对象： java  python  prel c++

6、存储  字符10  16bit
		 数值10  1010  10进制转换2进制
7、变量类型：定义数据的存储格式和长度，便于计算机存储




http://blog.csdn.net/meteorolite_fox/article/category/2770789
8、强：变量使用前必须声明，甚至还要初始化
   弱：变量使用时声明，甚至不分类型
9、变量赋值：var_name = value

10、bash 变量类型：
	环境变量
	本地变量：
	特殊变量
11、ANMAL=pig(单引号是强转换，双引号是弱引用)
	echo "there are some ${ANMAL}s"
	echo 'there are some ${ANMAL}s'
12、本地变量：
	VARNAME=VALUE: 作用域为整个bash进程
	局部变量：
	lacal VARNAME=VALUE;
	环境变量：
	export VARNAME=VALUE;（导出）
13、脚本在执行的时候会启动一个shell进程
	命令行中启动的脚本会继承当前shell环境变量；
	系统自动执行的脚本（非命令启动）就需要各自定义需要的环境变量
	
	环境变量只跟当前shell以及子shell有用  对其他shell没有用
	
14、特殊变量：
	$?: 上一个命令的执行状态的返回值
	    程序执行一般有两类返回值：程序执行结果
							  程序状态返回代码（0-255）0表示成功  0-255表示错误
							  1,2,127系统预留
15、输出重定向：
	>  覆盖
	>> 
	2>
	2>>
	&>
	/dev/null（dev下的都是设备 软件模拟设备   bit bucket(数据黑洞)）
	
16、撤销变量：
	unset VALUE(不加$)
17、查看当前有多少变量
	set(包括环境变量和本地变量)
	
	查看当前shell环境变量：  printenv  env  export
18、冒号加变量的路径

19、脚本：命令的堆砌，按实际需要，结合流程控制机制实现的源程序脚本

20、shebaug:魔数
	#！/bin/bash
	#注释  不执行 
	加执行权限：chmod+x first.sh 
										http://blog.csdn.net/meteorolite_fox/article/category/2770789			